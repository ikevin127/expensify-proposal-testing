name: Test Coverage

on:
  workflow_dispatch:
    inputs:
      pr_number:
        description: "PR Number"
        required: true
        type: number

jobs:
  setup:
    name: Install & Prepare
    runs-on: ubuntu-latest
    outputs:
      pr_sha: ${{ steps.pr-head.outputs.sha }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 2
          ref: ${{ github.event.inputs.pr_number && format('refs/pull/{0}/merge', github.event.inputs.pr_number) || github.ref }}

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Get PR head SHA
        if: github.event.inputs.pr_number
        id: pr-head
        run: |
          PR_HEAD_SHA=$(gh api repos/${{ github.repository }}/pulls/${{ github.event.inputs.pr_number }} --jq '.head.sha')
          echo "sha=$PR_HEAD_SHA" >> $GITHUB_OUTPUT
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  test-shards:
    needs: setup
    runs-on: ubuntu-latest
    strategy:
      matrix:
        shard: [1, 2, 3]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2
          ref: ${{ github.event.inputs.pr_number && format('refs/pull/{0}/merge', github.event.inputs.pr_number) || github.ref }}
      - uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"
      - run: npm ci

      - name: Run Jest Shard ${{ matrix.shard }}
        run: npm run test:coverage -- --shard=${{ matrix.shard }}/3 --passWithNoTests

      - name: Check If Coverage Is Empty
        id: check-coverage
        run: |
          if [ -s coverage/lcov.info ]; then
            echo "hasCoverage=true" >> $GITHUB_OUTPUT
          else
            echo "hasCoverage=false" >> $GITHUB_OUTPUT
          fi

      - name: Upload Coverage to Codecov
        if: success() && steps.check-coverage.outputs.hasCoverage == 'true'
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: shard-${{ matrix.shard }}
          override_pr: ${{ github.event.inputs.pr_number || '' }}
          override_commit: ${{ needs.setup.outputs.pr_sha || github.sha }}
          files: coverage/lcov.info
          verbose: true

      - name: Upload Test Results to Codecov
        if: ${{ !cancelled() }} && steps.check-coverage.outputs.hasCoverage == 'true'
        uses: codecov/test-results-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: shard-${{ matrix.shard }}
          override_pr: ${{ github.event.inputs.pr_number || '' }}
          override_commit: ${{ needs.setup.outputs.pr_sha || github.sha }}
          verbose: true
