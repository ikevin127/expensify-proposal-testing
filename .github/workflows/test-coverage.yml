name: Test Coverage

on:
  pull_request:
    types: [opened, synchronize]
    paths: ["src/**/*.ts"]

jobs:
  coverage:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm run test:coverage

      - name: Generate baseline coverage from main branch
        run: |
          # Create a temporary directory for main branch
          git fetch origin main
          git checkout main -- .
          
          # Install dependencies and run coverage for main branch
          npm run test:coverage
          
          # Move main branch coverage to baseline directory
          mv coverage baseline-coverage
          
          # Switch back to PR branch and regenerate coverage
          git checkout ${{ github.head_ref }} -- .
          npm run test:coverage

      - name: Upload coverage artifacts
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage/

      - name: Deploy coverage static to Surge.sh
        run: |
          # Install surge globally
          npm install -g surge

          # Create a unique subdomain for this PR and run
          DOMAIN="expensify-proposal-testing-coverage-pr${{ github.event.pull_request.number }}-run${{ github.run_id }}.surge.sh"

          # Deploy to surge with token (you'll need to add SURGE_TOKEN as a repository secret)
          surge ./coverage "$DOMAIN" --token ${{ secrets.SURGE_TOKEN }}

          # Save the coverage URL for the next step
          echo "COVERAGE_URL=https://$DOMAIN" >> "$GITHUB_ENV"
          echo "Coverage report deployed to: https://$DOMAIN"

      - name: Post coverage to PR
        uses: ./.github/actions/javascript/postTestCoverageComment
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
          COVERAGE_ARTIFACT_NAME: coverage-report
          COVERAGE_URL: ${{ env.COVERAGE_URL }}
          BASE_COVERAGE_PATH: ./baseline-coverage
