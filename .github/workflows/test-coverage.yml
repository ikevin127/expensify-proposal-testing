name: Test Coverage

on:
  workflow_dispatch:
    inputs:
      pr_number:
        description: "PR Number"
        required: true
        type: number

jobs:
  coverage:
    runs-on: ubuntu-latest
    steps:
      - name: Get PR Info
        id: get_pr
        uses: actions/github-script@v7
        with:
          script: |
            const PR = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.inputs.pr_number
            })
            core.setOutput('repo', PR.data.head.repo.full_name)
            core.setOutput('ref', PR.data.head.ref)

      - name: Checkout PR branch
        uses: actions/checkout@v4
        with:
          repository: ${{ steps.get_pr.outputs.repo }}
          ref: ${{ steps.get_pr.outputs.ref }}

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Check Changed Coverage src/ Files
        id: check-src-changes
        run: ./.github/scripts/checkCoverageChanges.sh

      - name: Install dependencies
        run: npm install

      - name: Run Coverage for Changed Files
        if: steps.check-src-changes.outputs.run_coverage == 'true'
        run: ./.github/scripts/runPRCoverage.sh
        env:
          CI: true

      - name: Generate Baseline Coverage From The Main Branch
        if: steps.check-src-changes.outputs.run_coverage == 'true'
        run: ./.github/scripts/generateBaselineCoverage.sh

      - name: Deploy Coverage Static to Surge.sh
        run: ./.github/scripts/deploy-coverage-surge.sh "${{ github.event.pull_request.number }}" "${{ github.run_id }}"
        env:
          SURGE_TOKEN: ${{ secrets.SURGE_TOKEN }}

      - name: Post Coverage to PR
        uses: ./.github/actions/javascript/postTestCoverageComment
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
          COVERAGE_ARTIFACT_NAME: coverage-report
          COVERAGE_URL: ${{ env.COVERAGE_URL }}
          BASE_COVERAGE_PATH: ./baseline-coverage
